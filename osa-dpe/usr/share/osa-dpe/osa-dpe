#!/bin/bash
##


###################################################################################################################################################
## Copyright (C) 2011 www.2aide.fr                                                                                                               ##
##                                                                                                                                               ##
## Ce programme est un logiciel libre, vous pouvez le redistribuer et / ou le modifier selon les termes de la Licence Publique Générale GNU      ##
## telle que publiée par la Free Software Foundation; soit la version 2 de la Licence, ou (à votre choix) toute version ultérieure.              ##
##                                                                                                                                               ##
## Ce programme est distribué dans l'espoir qu'il sera utile, mais SANS AUCUNE GARANTIE, sans même la garantie implicite de COMMERCIALISATION    ##
## ou D'ADAPTATION A UN USAGE PARTICULIER. Voir la Licence Publique Générale GNU, disponible ici http://www.opensource.org/licenses/gpl-2.0.php  ##
## pour plus de détails.                                                                                                                         ##
##                                                                                                                                               ##
## Vous devriez avoir reçu une copie de la Licence Publique Générale GNU avec ce programme, sinon, écrivez à                                     ##
## Free Software Foundation, Inc, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA                                                          ##
##                                                                                                                                               ##
##                                                                                                                                               ##
##                                 En 2 mots, vous étes libre d'utiliser, de copier et de distribuer ce programme                                ##
##                                  à condition de soumettre votre copie à la même licence GPL v-2 ou ultérieure                                 ##
##                                                                                                                                               ##
###################################################################################################################################################


## On récupère les emplacements des répertoires de travail de OSagence
## On récupère les emplacements des répertoires de travail de OSagence
if [ -e "/usr/share/osagence/osa-menu" ]; then
	{
		eval "$(grep 'rept1=\"' '/usr/share/osagence/osa-menu')"
	}
else
	{
		eval "$(grep 'rept1=\"' '/usr/share/osa-dpe/osa-gui-dpe')"
	}
fi

if [ -e "${rept1}/rept/rept.cfg" ]; then
	{
		eval $(grep 'rept=\"' "${rept1}/rept/rept.cfg")
	}
else
	{
		exit 0
	}
fi

## Vérification de l'existence des répertoires de configuration
if [ ! -e "${rept}/conf/config-dpe.cfg" ]; then
	{
		tar -zxvf "/usr/share/osa-dpe/data.tar.gz" -C "${rept}/"
	}
fi

## Image d'attente
export MAIN_VIEWER_MOD_WAIT='<window title="viewer_wait_dpe" window_position="1" decorated="false">
								<vbox>
									<pixmap>
									<input file>/usr/share/osa-dpe/pixmaps/anim-dpe.gif</input>
									</pixmap>
									<text>
										<label>"Création étiquette"</label>
									</text>
								</vbox>
							</window>'
#Lancer logo
gtkdialog --program=MAIN_VIEWER_MOD_WAIT&
## Lecture du fichier temporaire de configuration et inscription des variables
eval $(cat "${rept1}/var-dpe.txt")

## Si une valeur est indiquée pour le DPE, on crée l'étiquette DPE
if [[ "${val}" =~ [0-9] ]] && [[ "${val}" -gt "-1" ]]; then
	{

		## Préparation de la valeur du DPE avec gestion des décimales
		val=$(echo ${val} | sed 's/\./,/g') ## On s'assure que les décimales soient séparées par une virgule et non un point
		dec=$(echo ${val} | cut -s -d, -f2) ## On récupére les décimales de la valeur
		ent=$(echo ${val} | cut -d, -f1)    ## On récupère la valeur entière

		## si pas de décimale on inscrit 00 après la virgule
		if [ -z "${dec}" ]; then
			{
				dec="00"
			}
		fi

		## si une seule décimale on inscrit 0 en plus à la fin
		if [ "${#dec}" == "1" ]; then
			{
				dec=$(echo "${dec}0")
			}
		fi

		## si plus de 2 décimales, on ne garde que les 2 premières
		if [ "${#dec}" -gt "2" ]; then
			{
				dec="$(echo ${dec} | cut -c1)$(echo ${dec} | cut -c2)"
			}
		fi

		## On reconstitue une valeur entière du DPE pour le positionnement sur l'échelle
		dpe="${ent}${dec}"
		dpe=$((${dpe}/100))
		valn="${ent}_${dec}"
		echo "valn=\"${valn}\"" > /tmp/valn.tmp

		## Gestion du positionnement du curseur sur l'échelle en fonction de la valeur DPE
		if [ "${dpe}" -lt "51" ]; then
			{
				pos=$(((((${dpe}*316)-8100)+12900)/100))
			}
		fi

		if [ "${dpe}" -gt "50" ] && [ "${dpe}" -lt "91" ]; then
			{
				pos=$((((((${dpe}-51)*390)-8100)+31000)/100))
			}
		fi


		if [ "${dpe}" -gt "90" ] && [ "${dpe}" -lt "151" ]; then
			{
				pos=$((((((${dpe}-91)*260)-8100)+48200)/100))
			}
		fi

		if [ "${dpe}" -gt "150" ] && [ "${dpe}" -lt "231" ]; then
			{
				pos=$((((((${dpe}-151)*195)-8100)+65900)/100))
			}
		fi

		if [ "${dpe}" -gt "230" ] && [ "${dpe}" -lt "331" ]; then
			{
				pos=$((((((${dpe}-231)*156)-8100)+83500)/100))
			}
		fi

		if [ "${dpe}" -gt "330" ] && [ "${dpe}" -lt "451" ]; then
			{
				pos=$((((((${dpe}-331)*130)-8100)+101100)/100))
			}
		fi

		if [ "${dpe}" -gt "450" ]; then
			{
				pos="1181"
			}
		fi

		## On reconstitue la valeur DPE avec 2 décimales pour l'inscrire dans le label du curseur de l'étiquette
		val=$(echo "'${ent},${dec}'")

		## On copie l'image originale du curseur dans le répertoire de travail
		cp "${rept}/conf/curseur.png" "${chodpe}/curseur1.png"

		## On inscrit la valeur DPE dans le label du curseur
		mogrify -gravity Northeast -pointsize 90 -fill "#ffffff" -stroke "#ffffff" -draw "text 40,40 ${val}" "${chodpe}/curseur1.png"

		## On crée le fond de l'étiquette
		convert -size 1701x1479 xc:white "${chodpe}/${nomdpe}-${valn}-DPE.png"

		## On positionne le curseur sur le fond en fonction de la valeur DPE
		composite -geometry  +0+${pos} "${chodpe}/curseur1.png" "${chodpe}/${nomdpe}-${valn}-DPE.png" "${chodpe}/${nomdpe}-${valn}-DPE.png"

		## On ajoute l'échelle par dessus le tout
		composite -geometry  +0+0 "${rept}/conf/echelle.png" "${chodpe}/${nomdpe}-${valn}-DPE.png" "${chodpe}/${nomdpe}-${valn}-DPE.png"

		## On supprime l'image copiée du curseur vierge
		rm "${chodpe}/curseur1.png"

		## Si demandé on crée une vignette de l'étiquette
		if [ "${vig}" == "true" ]; then
			{
				convert -resize "${tllv}" "${chodpe}/${nomdpe}-${valn}-DPE.png" "${chodpe}/${nomdpe}-${valn}-vig-DPE.${tltyp}"
			}
		fi

		## Si demandé on crée une étiquette de taille moyenne
		if [ "${grand}" == "true" ]; then
			{
				convert -resize "${tlg}" "${chodpe}/${nomdpe}-${valn}-DPE.png" "${chodpe}/${nomdpe}-${valn}-gd-DPE.${tltyp}"
			}
		fi

		## Si le type demandé n'est pas PNG on supprime l'image PNG d'origine générée lors de la création de l'étiquette
		if [ "${tltyp}" != "png" ]; then
			{
				if [ "${ntv}" == "true" ]; then
					{
						convert "${chodpe}/${nomdpe}-${valn}-DPE.png" "${chodpe}/${nomdpe}-${valn}-DPE.${tltyp}"
						rm "${chodpe}/${nomdpe}-${valn}-DPE.png"
					}
				else
					{
						rm "${chodpe}/${nomdpe}-${valn}-DPE.png"
					}
				fi
			}
		else
			{
				## si l'image en taille native n'est pas demandé, on supprime l'image PNG d'origine générée lors de la création de l'étiquette
				if [ "${ntv}" == "false" ]; then
					{
						rm "${chodpe}/${nomdpe}-${valn}-DPE.png"
					}
				fi
			}
		fi
	}
fi


## Si une valeur est indiquée pour le GES, on crée l'étiquette DPE
if [[ "${val1}" =~ [0-9] ]] && [[ "${val1}" -gt "-1" ]]; then
	{

		## Préparation de la valeur du GES avec gestion des décimales
		val1=$(echo ${val1} | sed 's/\./,/g')  ## On s'assure que les décimales soient séparées par une virgule et non un point
		dec=$(echo ${val1} | cut -s -d, -f2)   ## On récupére les décimales de la valeur
		ent=$(echo ${val1} | cut -d, -f1)      ## On récupère la valeur entière

		## si pas de décimale on inscrit 00 après la virgule
		if [ -z "${dec}" ]; then
			{
				dec="00"
			}
		fi

		## si une seule décimale on inscrit 0 en plus à la fin
		if [ "${#dec}"="1" ]; then
			{
				dec=$(echo "${dec}0")
			}
		fi

		## si plus de 2 décimales, on ne garde que les 2 premières
		if [ "${#dec}" -gt "2" ]; then
			{
				dec="$(echo ${dec} | cut -c1)$(echo ${dec} | cut -c2)"
			}
		fi

		## On reconstitue une valeur entière du GES pour le positionnement sur l'échelle
		dpe="${ent}${dec}"
		dpe=$((${dpe}/100))
		valn1="${ent}_${dec}"
		echo "valn1=\"${valn1}\"" > /tmp/valn1.tmp

		## Gestion du positionnement du curseur sur l'échelle en fonction de la valeur GES
		if [ "${dpe}" -lt "6" ]; then
			{
				pos=$(((((${dpe}*3160)-8100)+12900)/100))
			}
		fi

		if [ "${dpe}" -gt "5" ] && [ "${dpe}" -lt "11" ]; then
			{
				pos=$((((((${dpe}-6)*3800)-8100)+31000)/100))
			}
		fi


		if [ "${dpe}" -gt "10" ] && [ "${dpe}" -lt "21" ]; then
			{
				pos=$((((((${dpe}-11)*1700)-8100)+48200)/100))
			}
		fi

		if [ "${dpe}" -gt "20" ] && [ "${dpe}" -lt "36" ]; then
			{
				pos=$((((((${dpe}-21)*1080)-8100)+65900)/100))
			}
		fi

		if [ "${dpe}" -gt "35" ] && [ "${dpe}" -lt "56" ]; then
			{
				pos=$((((((${dpe}-36)*800)-8100)+83500)/100))
			}
		fi

		if [ "${dpe}" -gt "55" ] && [ "${dpe}" -lt "81" ]; then
			{
				pos=$((((((${dpe}-56)*630)-8100)+101100)/100))
			}
		fi

		if [ "${dpe}" -gt "80" ]; then
			{
				pos="1181"
			}
		fi

		## On reconstitue la valeur GES avec 2 décimales pour l'inscrire dans le label du curseur de l'étiquette
		val1=$(echo "'${ent},${dec}'")

		## On copie l'image originale du curseur dans le répertoire de travail
		cp "${rept}/conf/GES-curseur.png" "${chodpe}/GES-curseur1.png"

		## On inscrit la valeur GES dans le label du curseur
		mogrify -gravity Northeast -pointsize 90 -fill "#ffffff" -stroke "#ffffff" -draw "text 40,40 ${val1}" "${chodpe}/GES-curseur1.png"

		## On crée le fond de l'étiquette
		convert -size 1701x1479 xc:white "${chodpe}/${nomdpe}-${valn1}-GES.png"

		## On positionne le curseur sur le fond en fonction de la valeur GES
		composite -geometry  +0+${pos} "${chodpe}/GES-curseur1.png" "${chodpe}/${nomdpe}-${valn1}-GES.png" "${chodpe}/${nomdpe}-${valn1}-GES.png"

		## On ajoute l'échelle par dessus le tout
		composite -geometry  +0+0 "${rept}/conf/GES-echelle.png" "${chodpe}/${nomdpe}-${valn1}-GES.png" "${chodpe}/${nomdpe}-${valn1}-GES.png"

		## On supprime l'image copiée du curseur vierge
		rm "${chodpe}/GES-curseur1.png"

		## Si demandé on crée une vignette de l'étiquette
		if [ "${vig}" == "true" ]; then
			{
				convert -resize "${tllv}" "${chodpe}/${nomdpe}-${valn1}-GES.png" "${chodpe}/${nomdpe}-${valn1}-vig-GES.${tltyp}"
			}
		fi

		## Si demandé on crée une étiquette de taille moyenne
		if [ "${grand}" == "true" ]; then
			{
				convert -resize "${tlg}" "${chodpe}/${nomdpe}-${valn1}-GES.png" "${chodpe}/${nomdpe}-${valn1}-gd-GES.${tltyp}"
			}
		fi


		## Si le type demandé n'est pas PNG on supprime l'image PNG d'origine générée lors de la création de l'étiquette
		if [ "${tltyp}" != "png" ]; then
			{
				if [ "${ntv}" == "true" ]; then
					{
						convert "${chodpe}/${nomdpe}-${valn1}-GES.png" "${chodpe}/${nomdpe}-${valn1}-GES.${tltyp}"
						rm "${chodpe}/${nomdpe}-${valn1}-GES.png"
					}
				else
					{
						rm "${chodpe}/${nomdpe}-${valn1}-GES.png"
					}
				fi
			}
		else
			{
				## si l'image en taille native n'est pas demandé, on supprime l'image PNG d'origine générée lors de la création de l'étiquette
				if [ "${ntv}" == "false" ]; then
					{
						rm "${chodpe}/${nomdpe}-${valn1}-GES.png"
					}
				fi
			}
		fi
	}
fi

## Suppression des fichiers temporaires
#rm "${rept1}/var-dpe.txt"
wmctrl -c viewer_wait_dpe
exit 0
